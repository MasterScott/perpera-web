{"version":3,"sources":["components/Loader/Loader.tsx","helpers/Observable.ts","components/Add/Add.tsx","components/Status/Status.tsx","components/Header/Header.tsx","components/SuccessPopup/SuccessPopup.tsx","services/Perpera.ts","components/RegisterPopup/RegisterPopup.tsx","components/Revision/Revision.tsx","components/Update/Update.tsx","components/ResultDetails/ResultDetails.tsx","components/Result/Result.tsx","components/Search/Search.tsx","components/App/App.tsx","registerServiceWorker.ts","index.tsx"],"names":["Loader","className","React","ObservableHelper","eventName","cb","this","registerTrigger","payload","getTriggers","forEach","triggers","push","Add","props","handleFile","bind","handleFileUri","changeFileType","handleURI","state","errorMsg","fileType","isLoading","uri","e","preventDefault","setState","file","target","files","console","log","getFileBuffer","fileBuffer","fire","fileName","name","Promise","resolve","reader","FileReader","onloadend","readyState","DONE","result","readAsArrayBuffer","url","http","XMLHttpRequest","open","send","status","fileSize","getResponseHeader","parseInt","controller","AbortController","signal","timerID","setTimeout","abort","getFileSize","fetch","method","response","clearTimeout","ok","blob","toString","getUriContent","value","title","src","alt","type","onChange","onClick","onSubmit","placeholder","pattern","Status","apiStatus","then","error","Header","width","href","rel","style","marginTop","SuccessPopup","isOpen","close","text","PerperaService","network","perpera","window","networks","hash","Document","hashAlgo","wif","doc","spender","Spender","fromWIF","trim","sync","updateContent","originalHash","considerUpdatingContent","update","fee","getFee","reference","getRawTransaction","RegisterPopup","renderEye","showPassword","toggleShowPassword","ArrayBuffer","isSuccess","rawTx","txid","handleForm","handleFee","handleWIF","changeHash","handleRaw","buffer","sha256","sha512","sha3_256","sha3_512","on","getHash","val","selBox","document","createElement","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","perperaService","copyMessage","updateDocument","commit","includes","nextHashAlgo","undefined","autoCorrect","disabled","Revision","makeHex","Array","prototype","map","call","Uint8Array","x","slice","join","hashes","Object","keys","revision","isCurrent","key","Math","random","formattedTime","owner","Update","ResultDetails","lastUpdate","transitions","length","tag","driver","coin","i","Result","isSearchArrived","resultComp","Search","searchTag","setSearchText","networkType","searchText","formatDate","from","blocks","transition","DateTime","fromISO","time","toISOString","toLocaleString","DATETIME_MED","onInput","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","catch","ReactDOM","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.56789865.chunk.js","sourcesContent":["import * as React from 'react';\nimport './Loader.css';\n\nclass Loader extends React.Component {\n  public render() {\n    return (\n      <div className=\"LoaderComp\">\n        <div className=\"loader-spinner\">\n          <div className=\"spinner\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","export default class ObservableHelper {\n  \n  public static on(eventName: string, cb: (payload?: any) => void) {\n    this.registerTrigger(eventName, cb);\n  }\n  \n  public static fire(eventName: string, payload?: any) {\n    const triggers = this.getTriggers(eventName);\n    triggers.forEach((cb: (payload: any) => void) => cb(payload));\n  }\n\n  private static triggers = {};\n\n  private static getTriggers(eventName: string) {\n    return this.triggers[eventName] || [];\n  }\n\n  private static registerTrigger(eventName: string, cb: (payload?: any) => void) {\n    if (!this.triggers[eventName]) {\n      this.triggers[eventName] = [];\n    }\n\n    this.triggers[eventName].push(cb);\n  }\n}","import * as React from \"react\";\nimport Loader from \"src/components/Loader/Loader\";\nimport ObservableHelper from \"src/helpers/Observable\";\nimport \"./Add.css\";\n\ninterface IState {\n  errorMsg: string;\n  fileType: boolean;\n  isLoading: boolean;\n  uri: string;\n}\n\nclass Add extends React.Component<{}, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.handleFile = this.handleFile.bind(this);\n    this.handleFileUri = this.handleFileUri.bind(this);\n    this.changeFileType = this.changeFileType.bind(this);\n    this.handleURI = this.handleURI.bind(this);\n\n    this.state = {\n      errorMsg: \"\",\n      fileType: true,\n      isLoading: false,\n      uri: \"\"\n    };\n  }\n\n  public async handleFile(e: any) {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n\n    const file: File = e.target.files[0];\n\n    console.log(file);\n\n    const fileBuffer = await this.getFileBuffer(file);\n    console.log(fileBuffer);\n    ObservableHelper.fire(\"onNewFileHash\", { fileBuffer, fileName: file.name });\n\n    this.setState({ isLoading: false });\n  }\n\n  public getFileBuffer(file: File): Promise<any> {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        if (reader.readyState === reader.DONE) {\n          resolve(reader.result);\n        }\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  public changeFileType(e: any) {\n    this.setState({ fileType: !this.state.fileType, errorMsg: \"\" });\n  }\n\n  public getFileSize(url: string) {\n    const http = new XMLHttpRequest();\n    http.open(\"HEAD\", url, false); // false = Synchronous\n\n    http.send(null); // it will stop here until this http request is complete\n\n    // when we are here, we already have a response, b/c we used Synchronous XHR\n\n    if (http.status === 200) {\n      const fileSize = http.getResponseHeader(\"content-length\");\n      if (fileSize != null) {\n        return parseInt(fileSize, 10);\n      }\n    }\n    return -1;\n  }\n\n  public async getUriContent(uri: string): Promise<any> {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const timerID = setTimeout(\n      (() => {\n        controller.abort();\n      }).bind(this),\n      10 * 60 * 1000\n    );\n\n    if (this.getFileSize(uri) === -1) {\n      return 0;\n    }\n    if (this.getFileSize(uri) > 256 * 1024 * 1024) {\n      return 1;\n    }\n\n    const response = await fetch(uri, { method: \"get\", signal });\n    console.log(response);\n    clearTimeout(timerID);\n    if (!response.ok) {\n      return 0;\n    }\n    return response.blob().toString();\n  }\n\n  public async handleFileUri(e: any) {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n\n    try {\n      const fileBuffer = await this.getUriContent(this.state.uri);\n      if (fileBuffer === 0) {\n        this.setState({ errorMsg: \"document URI invalid\" });\n      } else if (fileBuffer === 1) {\n        this.setState({ errorMsg: \"document URI invalid\" });\n      } else {\n        ObservableHelper.fire(\"onNewFileHash\", {\n          fileBuffer,\n          fileName: this.state.uri\n        });\n        this.setState({ fileType: !this.state.fileType });\n      }\n    } catch (e) {\n      this.setState({ errorMsg: \"error on adding URI\" });\n    }\n\n    this.setState({ isLoading: false });\n  }\n\n  public handleURI(e: any) {\n    this.setState({ errorMsg: \"\", uri: e.target.value });\n  }\n\n  public render() {\n    return (\n      <div className=\"AddComp\">\n        {this.state.isLoading && <Loader />}\n        <div className=\"add-btn add-file\" title=\"input file\">\n          <img\n            className=\"add-icon\"\n            src=\"/img/attach-file.svg\"\n            alt=\"attach-file\"\n          />\n          <input className=\"file\" type=\"file\" onChange={this.handleFile} />\n        </div>\n        <div className=\"add-btn add-uri\" title=\"input uri\">\n          <img\n            className=\"add-icon\"\n            src=\"/img/attach-uri.svg\"\n            alt=\"attach uri\"\n          />\n          <input className=\"file\" type=\"button\" onClick={this.changeFileType} />\n        </div>\n        {!this.state.fileType && (\n          <div className=\"input-uri\">\n            <div className=\"input-dlg\">\n              <button className=\"close\" onClick={this.changeFileType}>\n                <img src=\"img/icon-close.svg\" alt=\"Close Popup\" />\n              </button>\n              <form className=\"form\" onSubmit={this.handleFileUri}>\n                <div>\n                  <label>Insert document URI:</label>\n                </div>\n                <div>\n                  <input\n                    className=\"form-field\"\n                    placeholder=\"Type URI here...\"\n                    type=\"url\"\n                    pattern=\"https?://.+\"\n                    onChange={this.handleURI}\n                  />\n                </div>\n                {this.state.errorMsg && (\n                  <div className=\"error-msg\">{this.state.errorMsg}</div>\n                )}\n                <button className=\"form-submit\">Add Uri</button>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Add;\n","import * as React from \"react\";\r\nimport Loader from \"src/components/Loader/Loader\";\r\nimport \"./Status.css\";\r\n\r\ninterface IState {\r\n  apiStatus: boolean;\r\n  isLoading: boolean;\r\n}\r\n\r\nclass Status extends React.Component<{}, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      apiStatus: false,\r\n      isLoading: false\r\n    };\r\n  }\r\n  public componentDidMount() {\r\n    // simplest solution : used getaddress API with old address\r\n    fetch(\"https://blockbook.peercoin.net/api\")\r\n      .then()\r\n      .then(\r\n        result => {\r\n          this.setState({\r\n            apiStatus: true\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            apiStatus: false\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"StatusComp\">\r\n        {this.state.isLoading && <Loader />}\r\n        {this.state.apiStatus && (\r\n          <div className=\"status-btn\">\r\n            <img src=\"img/status_on.svg\" alt=\"connected\" />\r\n          </div>\r\n        )}\r\n        {!this.state.apiStatus && (\r\n          <div className=\"status-btn\">\r\n            <img src=\"img/status_off.svg/\" alt=\"disconnected\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Status;\r\n","import * as React from \"react\";\nimport \"./Header.css\";\n\nclass Header extends React.Component {\n  public render() {\n    return (\n      <header className=\"HeaderComp\">\n        <div className=\"container\">\n          <h1 className=\"title\">PERPERA</h1>\n          <h2 className=\"slogan\">A Data Audit Protocol.</h2>\n          <div className=\"by\">\n            <span>by</span>\n            <img src=\"img/peercoin-logo.svg\" alt=\"Peercoin\" width=\"95\" />\n          </div>\n          <a\n            href=\"https://github.com/PeerAssets/peerassets-rfcs/blob/master/0009-data-audit.md\"\n            className=\"slogan\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ marginTop: \"20px\" }}\n          >\n            How it works\n          </a>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import * as React from 'react';\nimport './SuccessPopup.css';\n\ninterface IProps {\n  text?: string;\n  title?: string;\n  txid?: string;\n}\n\ninterface IState {\n  isOpen: boolean;\n}\n\nclass SuccessPopup extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      isOpen: true\n    }\n\n    this.close = this.close.bind(this);\n  }\n\n  public close() {\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  public render() {\n    return (\n      <div className={this.state.isOpen ? 'SuccessPopupComp open' : 'SuccessPopupComp'}>\n        <div className=\"success-popup\">\n          <img src=\"img/icon-success.svg\" alt=\"\" className=\"success-icon\"/>\n          <div className=\"success-title\">{this.props.title || 'Success!'}</div>\n          <div className=\"success-text\">{this.props.text || 'File registered to blockchain.'}</div>\n          <button className=\"form-submit\" onClick={this.close}>OK</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SuccessPopup;\n","export default class PerperaService {\n  private perpera: any;\n  private network: string;\n\n  constructor(network?: string) {\n    this.perpera = window['perpera'];\n    this.network = network || window['perpera'].networks['peercoin'];\n  }\n\n  public getDocument(hash: string) {\n    return new this.perpera.Document(hash, this.network);\n  }\n\n  public async setDocument(hash: string, hashAlgo: string, wif: string) {\n    const doc = new this.perpera.Document(hash, this.network);\n    const spender = this.perpera.Spender.fromWIF(wif.trim(), this.network);\n    await spender.sync();\n    return await doc.updateContent({hashAlgo: hash}, spender);\n  }\n\n  public async updateDocument(originalHash: string, hash: string, hashAlgo: string, wif: string) {\n    const doc = new this.perpera.Document(hash, this.network);\n    const spender = this.perpera.Spender.fromWIF(wif.trim(), this.network);\n    await spender.sync();\n    return await doc.updateContent({hashAlgo: hash}, spender);\n  }\n\n  public async getFee(hash: string, hashAlgo: string, wif: string) {\n    const doc = new this.perpera.Document(hash, this.network);\n    const spender = this.perpera.Spender.fromWIF(wif.trim(), this.network);\n    await spender.sync();\n    const update = await doc.considerUpdatingContent({hashAlgo: hash}, spender);\n    return {\n      fee: (update.getFee() / 10**6),\n      reference: update\n    }\n  }\n\n  public async getRawTransaction(hash: string, hashAlgo: string, wif: string) {\n    const doc = new this.perpera.Document(hash, this.network);\n    const spender = this.perpera.Spender.fromWIF(wif.trim(), this.network);\n    await spender.sync();\n    return await doc.getRawTransaction({hashAlgo: hash}, spender);\n  }\n}\n","import {sha256} from \"js-sha256\";\nimport {sha3_256} from 'js-sha3';\nimport {sha3_512} from 'js-sha3';\nimport {sha512} from \"js-sha512\";\n\nimport * as React from \"react\";\nimport Loader from \"src/components/Loader/Loader\";\nimport SuccessPopup from \"src/components/SuccessPopup/SuccessPopup\";\nimport ObservableHelper from \"src/helpers/Observable\";\nimport PerperaService from \"src/services/Perpera\";\nimport \"./RegisterPopup.css\";\n\ninterface IState {\n  errorMsg: string;\n  fileBuffer: ArrayBuffer;\n  fileName: string;\n  hash: string;\n  hashAlgo: string;\n  isLoading: boolean;\n  isOpen: boolean;\n  originalHash?: string;\n  isSuccess: boolean;\n  fee?: any;\n  rawTx: string;\n  showPassword: boolean;\n  txid: string;\n  wif: string;\n}\n\nclass RegisterPopup extends React.Component<{}, IState> {\n  private reference: any;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      errorMsg: \"\",\n      fileBuffer: new ArrayBuffer(1),\n      fileName: \"\",\n      hash: \"\",\n      hashAlgo: \"sha2-256\",\n      isLoading: false,\n      isOpen: false,\n      isSuccess: false,\n      rawTx: \"\",\n      showPassword: false,\n      txid: \"\",\n      wif: \"\",\n    };\n\n    this.handleForm = this.handleForm.bind(this);\n    this.handleFee = this.handleFee.bind(this);\n    this.close = this.close.bind(this);\n    this.handleWIF = this.handleWIF.bind(this);\n    this.changeHash = this.changeHash.bind(this);\n    this.handleRaw = this.handleRaw.bind(this);\n  }\n\n  public getHash(hashAlgo: string, buffer: ArrayBuffer){\n    if(hashAlgo === \"sha2-256\"){\n      const hash = sha256(buffer);\n      return hash;\n    }\n    if(hashAlgo === \"sha2-512\"){\n      const hash = sha512(buffer);\n      return hash;\n    }\n    if(hashAlgo === \"sha3-256\"){\n      const hash = sha3_256(buffer);\n      return hash;\n    }\n    if(hashAlgo === \"sha3-512\"){\n      const hash = sha3_512(buffer);\n      return hash;\n    }\n\n    return \"\";\n  }\n\n  public componentDidMount() {\n    ObservableHelper.on(\"onNewFileHash\", (payload: any) => {\n      console.log(payload.fileBuffer);\n      this.setState({\n        fileBuffer: payload.fileBuffer,\n        fileName: payload.fileName,\n        hash: this.getHash(\"sha2-256\", payload.fileBuffer),\n        hashAlgo: \"sha2-256\",\n        isOpen: true,\n        originalHash: \"\"\n      });\n    });\n    ObservableHelper.on(\"onUpdateFileHash\", (payload: any) => {\n      this.setState({\n        fileBuffer: payload.fileBuffer,\n        fileName: payload.fileName,\n        hash: this.getHash(\"sha2-256\", payload.fileBuffer),\n        hashAlgo: \"sha2-256\",\n        isOpen: true,\n        originalHash: payload.originalHash\n      });\n    });\n  }\n\n  public copyMessage(val: string){\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = val;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  public async handleRaw(e: any){\n    e.preventDefault();\n    this.setState({ isLoading: true });\n    const perperaService = new PerperaService();\n    try {\n      const result = await perperaService.getRawTransaction(\n        this.state.hash,\n        this.state.hashAlgo,\n        this.state.wif\n      );\n      this.setState({ isLoading: false , rawTx: result});\n      this.copyMessage(result);\n    } catch (e) {\n      this.setState({ errorMsg: \"WIF invalid.\", isLoading: false });\n    }\n  }\n\n  public async handleForm(e: any) {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n\n    const perperaService = new PerperaService();\n\n    try {\n      if (this.state.originalHash) {\n        const result = await perperaService.updateDocument(\n          this.state.originalHash,\n          this.state.hash,\n          this.state.hashAlgo,\n          this.state.wif\n        );\n        this.setState({txid: result});\n        console.log(result);\n      } else {\n        const result = await this.reference.commit();\n        this.setState({txid: result});\n        console.log(result);\n      }\n      this.setState({ isSuccess: true, isLoading: false });\n    } catch (e) {\n      if (e.toString().includes(\"Insufficient funds\")) {\n        this.setState({\n          errorMsg: \"Your wallet has no funds.\",\n          isLoading: false\n        });\n        return;\n      }\n\n      console.log(e);\n\n      this.setState({ errorMsg: \"WIF invalid.\", isLoading: false });\n    }\n  }\n\n  public async handleFee(e: any) {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n\n    const perperaService = new PerperaService();\n\n    try {\n      const result = await perperaService.getFee(\n        this.state.hash,\n        this.state.hashAlgo,\n        this.state.wif\n      );\n\n      this.reference = result.reference;\n\n      this.setState({\n        fee: result.fee,\n        isLoading: false\n      });\n    } catch (e) {\n      if (e.toString().includes(\"Insufficient funds\")) {\n        this.setState({\n          errorMsg: \"Your wallet has no funds.\",\n          isLoading: false\n        });\n        return;\n      }\n\n      console.log(e);\n\n      this.setState({ errorMsg: \"WIF invalid.\", isLoading: false });\n    }\n  }\n\n  public handleWIF(e: any) {\n    this.setState({ errorMsg: \"\", wif: e.target.value, rawTx: \"\" });\n  }\n\n  public close() {\n    this.setState({ isOpen: false, isLoading: false });\n  }\n\n  public nextHashAlgo(hashAlgo: string) {\n    if(hashAlgo === \"sha2-256\"){\n      return \"sha2-512\";\n    }\n    if(hashAlgo === \"sha2-512\"){\n      return \"sha3-256\";\n    }\n    if(hashAlgo === \"sha3-256\"){\n      return \"sha3-512\";\n    }\n    if(hashAlgo === \"sha3-512\"){\n      return \"sha2-256\";\n    }\n    return \"\";\n  }\n\n  public changeHash() {\n    const hashAlgo = this.nextHashAlgo(this.state.hashAlgo);\n    this.setState({\n      fee: undefined,\n      hash: this.getHash(hashAlgo, this.state.fileBuffer),\n      hashAlgo\n    });\n  }\n\n  public renderEye = () => {\n    return this.state.showPassword ? (\n      <i className=\"eye-slash\" onClick={this.toggleShowPassword} />\n    ) : (\n      <i className=\"eye-regular\" onClick={this.toggleShowPassword} />\n    );\n  };\n\n  public toggleShowPassword = () => {\n    this.setState({ showPassword: !this.state.showPassword });\n  };\n\n  public render() {\n    const { wif, showPassword } = this.state;\n    return (\n      <div\n        className={\n          this.state.isOpen ? \"RegisterPopupComp open\" : \"RegisterPopupComp\"\n        }\n      >\n        {this.state.isLoading && <Loader />}\n        {this.state.isSuccess && (\n          <SuccessPopup\n            txid={this.state.txid}\n            text=\"Your file got registered in the blockchain. Wait at least 10 minutes and use the file hash to check it's registry.\"\n          />\n        )}\n        {this.state.isOpen && (\n          <div className=\"register-popup\">\n            <button className=\"close\" onClick={this.close}>\n              <img src=\"img/icon-close.svg\" alt=\"Close Popup\" />\n            </button>\n            <div className=\"file\">\n              <img src=\"img/icon-file.svg\" alt=\"File\" className=\"file-icon\" />\n              <span>{this.state.fileName}</span>\n            </div>\n\n            <div className=\"hash\">\n              <div className=\"label\" onClick={this.changeHash} title={\"change to \" + this.nextHashAlgo(this.state.hashAlgo)}>{this.state.hashAlgo}</div>\n              <div className=\"hash-string\">{this.state.hash}</div>\n            </div>\n\n            {!this.state.fee && <p>Fee to be calculated.</p>}\n            {this.state.fee && (\n              <p>\n                Saving this hash on blockchain will cost you a transaction fee\n                of <b className=\"bold-green\">{this.state.fee} PPC</b>.\n              </p>\n            )}\n\n            {!this.state.fee && (\n              <form className=\"form\" onSubmit={this.handleFee}>\n                <label>Insert your WIF:{this.renderEye()}</label>\n                <input\n                  className=\"form-field\"\n                  autoCorrect=\"false\"\n                  placeholder=\"Type WIF here...\"\n                  value={wif.trim()}\n                  onChange={this.handleWIF}\n                  type={showPassword ? \"text\" : \"password\"}\n                />\n                {this.state.errorMsg && (\n                  <div className=\"error-msg\">{this.state.errorMsg}</div>\n                )}\n                <button\n                  className=\"form-submit\"\n                  disabled={this.state.isLoading || this.state.isSuccess}\n                >\n                  Calculate Fee\n                </button>\n              </form>\n            )}\n\n            {this.state.fee && (\n              <form className=\"form\" onSubmit={this.handleForm}>\n                <label>Insert your WIF:{this.renderEye()}</label>\n                <input\n                  className=\"form-field\"\n                  autoCorrect=\"false\"\n                  placeholder=\"Type WIF here...\"\n                  value={wif.trim()}\n                  onChange={this.handleWIF}\n                  type={showPassword ? \"text\" : \"password\"}\n                />\n                {this.state.errorMsg && (\n                  <div className=\"error-msg\">{this.state.errorMsg}</div>\n                )}\n                {this.state.rawTx === \"\" && (<button\n                  className=\"btn-getraw\"\n                  disabled={this.state.isLoading}\n                  onClick={this.handleRaw}\n                >\n                  Show Raw Transaction\n                </button>)}\n                {this.state.rawTx !== \"\" && (\n                  <div className=\"show-raw\">\n                    <label>Raw Transaction</label>\n                    <div>{this.state.rawTx}</div>\n                  </div>\n                )}\n                <button\n                  className=\"form-submit\"\n                  disabled={this.state.isLoading || this.state.isSuccess}\n                >\n                  {this.state.originalHash ? \"Update\" : \"Register\"} Document\n                </button>\n              </form>\n            )}\n\n            <p>\n              After registering, you will have to wait for at least one new\n              block to be sure your entry is registered with the blockchain.\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default RegisterPopup;\n","import * as React from \"react\";\nimport \"./Revision.css\";\n\ninterface IProps {\n  revision: any;\n  isCurrent?: boolean;\n}\n\nclass Revision extends React.Component<IProps> {\n  public makeHex = (buffer: any) => {\n    return Array.prototype.map\n      .call(new Uint8Array(buffer), (x: any) =>\n        (\"00\" + x.toString(16)).slice(-2)\n      )\n      .join(\"\");\n  };\n\n  public render() {\n    const hashes = Object.keys(this.props.revision.state.hash);\n\n    return (\n      <div\n        className={\n          this.props.isCurrent ? \"RevisionComp is-current\" : \"RevisionComp\"\n        }\n      >\n        {this.props.isCurrent && (\n          <span className=\"current-label\">Current Revision</span>\n        )}\n\n        {hashes.map(hash => (\n          <div className=\"revision-info\" key={Math.random()}>\n            <div className=\"revision-title\">Document Hash ({hash}):</div>\n            <div className=\"revision-value\">\n              {this.makeHex(this.props.revision.state.hash[hash])}\n            </div>\n          </div>\n        ))}\n        <div className=\"revision-info\" key={Math.random()}>\n          <div className=\"revision-title\">Date Issued:</div>\n          <div className=\"revision-value\">\n            {this.props.revision.formattedTime}\n          </div>\n        </div>\n        <div className=\"revision-info\" key={Math.random()}>\n          <div className=\"revision-title\">Owner:</div>\n          <div className=\"revision-value\">{this.props.revision.state.owner}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Revision;\n","import * as React from 'react';\nimport Loader from 'src/components/Loader/Loader';\nimport ObservableHelper from 'src/helpers/Observable';\nimport './Update.css';\n\ninterface IState {\n  isLoading: boolean;\n}\n\ninterface IProps {\n  originalHash: string;\n}\n\nclass Update extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.handleFile = this.handleFile.bind(this);\n\n    this.state = {\n      isLoading: false\n    }\n  }\n\n  public async handleFile(e: any) {\n    e.preventDefault();\n    this.setState({ isLoading: true });\n\n    const file: File = e.target.files[0];\n\n    console.log(file);\n\n    const fileBuffer = await this.getFileBuffer(file);\n\n    ObservableHelper.fire('onUpdateFileHash', {originalHash: this.props.originalHash, fileBuffer, fileName: file.name});\n\n    this.setState({ isLoading: false });\n  }\n\n  public getFileBuffer(file: File): Promise<any> {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      \n      reader.onloadend = () => {\n        if (reader.readyState === reader.DONE) {\n          resolve(reader.result);\n        }\n      }\n\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"UpdateComp\">\n        {this.state.isLoading && <Loader />}\n        <div className=\"update-btn\">+<input className=\"file\" type=\"file\" onChange={this.handleFile}/></div>\n      </div>\n    );\n  }\n}\n\nexport default Update;\n","import * as React from 'react';\nimport Revision from '../Revision/Revision';\nimport Update from '../Update/Update';\nimport './ResultDetails.css';\n\ninterface IProps {\n  doc: any;\n}\n\nclass ResultDetails extends React.Component<IProps> {\n  public render() {\n    const lastUpdate = this.props.doc.transitions[this.props.doc.transitions.length - 1].formattedTime\n    return (\n      <div className=\"ResultDetailsComp\">\n        <div className=\"data\">\n          <div className=\"label\">Showing Revisions for Tag:</div>\n          <div className=\"value green\">{this.props.doc.tag}</div>\n        </div>\n        <div className=\"panel grey\">\n          <div className=\"data\">\n            <div className=\"label\">Network:</div>\n            <div className=\"value green\">{this.props.doc.driver.network.coin}</div>\n          </div>\n          <div className=\"data\">\n            <div className=\"label\">Last Update:</div>\n            <div className=\"value green\">{lastUpdate}</div>\n          </div>\n        </div>\n        <h3>File Revisions ({this.props.doc.transitions.length}):</h3>\n        {this.props.doc.transitions.map((revision: any, i: number) => (\n          <Revision isCurrent={i === 0} key={Math.random()} revision={revision} />\n        ))}\n        <hr/>\n        <Update originalHash={this.props.doc.tag} />\n      </div>\n    );  \n  }\n}\n\nexport default ResultDetails;\n","import * as React from 'react';\nimport ObservableHelper from '../../helpers/Observable';\nimport ResultDetails from '../ResultDetails/ResultDetails';\nimport './Result.css';\n\ninterface IState {\n  result: any;\n  isSearchArrived: boolean;\n}\n\n\nclass Result extends React.Component<{}, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      isSearchArrived: false,\n      result: undefined\n    }\n  }\n\n  public componentWillMount() {\n    ObservableHelper.on('onSearch', (result: any) => {\n      if (result.status === 'empty') {\n        this.setState({\n          isSearchArrived: false,\n          result: undefined\n        });\n        return;\n      }\n\n      this.setState({\n        isSearchArrived: true,\n        result\n      });\n    })\n  }\n\n  public render() {\n    let resultComp;\n\n    if (!this.state.isSearchArrived) {\n      resultComp = (\n        <h2 key=\"a\" className=\"waiting-message\"><span>Waiting for a search above.</span></h2>\n      );\n    } else if (this.state.result.doc) {\n      resultComp = (\n        <ResultDetails doc={this.state.result.doc} />\n      );\n    } else {\n      resultComp = (\n        <h2 key=\"b\" className=\"waiting-message\"><span>No results found for this document tag.</span></h2>\n      )\n    }\n\n    return (\n      <div className=\"ResultComp\">\n        <div className=\"container\">\n          {resultComp}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Result;\n","import { DateTime } from 'luxon';\nimport * as React from 'react';\nimport ObservableHelper from '../../helpers/Observable';\nimport Loader from '../Loader/Loader';\nimport './Search.css';\n\ninterface IState {\n  searchText: string;\n  networkType: string;\n  isLoading: boolean;\n}\n\nclass Search extends React.Component<{}, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.searchTag = this.searchTag.bind(this);\n    this.setSearchText = this.setSearchText.bind(this);\n\n    this.state = {\n      isLoading: false,\n      networkType: 'peercoin',\n      searchText: ''\n    }\n  }\n\n  public async searchTag(e: React.FormEvent) {\n    const { searchText, networkType } = this.state;\n\n    e.preventDefault();\n\n\n    // If search is empty or only spaces, ignore request\n    // and fire event saying field is empty\n    if (!searchText.trim()) {\n      ObservableHelper.fire('onSearch', {status: 'empty'});\n      return;\n    }\n\n    this.setState({ isLoading: true });\n\n    // tslint:disable-next-line:no-string-literal\n    const perpera = window['perpera'];\n    let doc = new perpera.Document(searchText, perpera.networks[networkType]);\n\n    await doc.sync();\n    doc = this.formatDate(doc);\n\n    if (Array.from(doc.blocks).length < 1) {\n      doc = undefined;\n    }\n\n    ObservableHelper.fire('onSearch', {status: 'search', doc});\n\n    this.setState({ isLoading: false });\n  }\n\n  public formatDate(doc: any) {\n    doc.transitions = doc.transitions.map((transition: any) => {\n      return {\n        ...transition,\n        formattedTime: DateTime.fromISO(transition.state.time.toISOString()).toLocaleString(DateTime.DATETIME_MED)\n      }\n    });\n\n    return doc;\n  }\n\n  public setSearchText(e: React.SyntheticEvent) {\n    const target = e.target as HTMLInputElement;\n    this.setState({ searchText: target.value });\n  }\n\n\n  public render() {\n    return (\n      <form className=\"SearchComp\" onSubmit={this.searchTag}>\n        {this.state.isLoading && <Loader />}\n        <input type=\"text\" className=\"search-field\" placeholder=\"Search document tag\" onInput={this.setSearchText} />\n        <button className=\"search-btn\">\n          <img src=\"img/icon-search.svg\" alt=\"Search\" width=\"24\" />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Search;\n","import * as React from 'react';\nimport Add from 'src/components/Add/Add';\nimport Status from 'src/components/Status/Status';\nimport ObservableHelper from 'src/helpers/Observable';\nimport Header from '../Header/Header';\nimport RegisterPopup from '../RegisterPopup/RegisterPopup';\nimport Result from '../Result/Result';\nimport Search from '../Search/Search';\nimport './App.css';\n\nclass App extends React.Component {\n\n  public componentWillMount() {\n    ObservableHelper.on('onSearch', (payload: any) => {\n      console.log('Fired!');\n      console.log(payload);\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"AppComp\">\n        <Header />\n        <Search />\n        <Add />\n        <Status />\n        <Result />\n        <RegisterPopup />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './styles/main.css';\nimport './styles/variables.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}